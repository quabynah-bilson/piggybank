// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: bank.proto

package ms

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QiggyBankServiceClient is the client API for QiggyBankService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QiggyBankServiceClient interface {
	CreateQiggyBank(ctx context.Context, in *QiggyBank, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	GetQiggyBank(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*QiggyBank, error)
	UpdateQiggyBank(ctx context.Context, in *QiggyBank, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteQiggyBank(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListQiggyBanks(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (QiggyBankService_ListQiggyBanksClient, error)
}

type qiggyBankServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQiggyBankServiceClient(cc grpc.ClientConnInterface) QiggyBankServiceClient {
	return &qiggyBankServiceClient{cc}
}

func (c *qiggyBankServiceClient) CreateQiggyBank(ctx context.Context, in *QiggyBank, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/bank.QiggyBankService/CreateQiggyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qiggyBankServiceClient) GetQiggyBank(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*QiggyBank, error) {
	out := new(QiggyBank)
	err := c.cc.Invoke(ctx, "/bank.QiggyBankService/GetQiggyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qiggyBankServiceClient) UpdateQiggyBank(ctx context.Context, in *QiggyBank, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bank.QiggyBankService/UpdateQiggyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qiggyBankServiceClient) DeleteQiggyBank(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/bank.QiggyBankService/DeleteQiggyBank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qiggyBankServiceClient) ListQiggyBanks(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (QiggyBankService_ListQiggyBanksClient, error) {
	stream, err := c.cc.NewStream(ctx, &QiggyBankService_ServiceDesc.Streams[0], "/bank.QiggyBankService/ListQiggyBanks", opts...)
	if err != nil {
		return nil, err
	}
	x := &qiggyBankServiceListQiggyBanksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QiggyBankService_ListQiggyBanksClient interface {
	Recv() (*QiggyBankList, error)
	grpc.ClientStream
}

type qiggyBankServiceListQiggyBanksClient struct {
	grpc.ClientStream
}

func (x *qiggyBankServiceListQiggyBanksClient) Recv() (*QiggyBankList, error) {
	m := new(QiggyBankList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QiggyBankServiceServer is the server API for QiggyBankService service.
// All implementations must embed UnimplementedQiggyBankServiceServer
// for forward compatibility
type QiggyBankServiceServer interface {
	CreateQiggyBank(context.Context, *QiggyBank) (*wrapperspb.StringValue, error)
	GetQiggyBank(context.Context, *wrapperspb.StringValue) (*QiggyBank, error)
	UpdateQiggyBank(context.Context, *QiggyBank) (*emptypb.Empty, error)
	DeleteQiggyBank(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error)
	ListQiggyBanks(*emptypb.Empty, QiggyBankService_ListQiggyBanksServer) error
	mustEmbedUnimplementedQiggyBankServiceServer()
}

// UnimplementedQiggyBankServiceServer must be embedded to have forward compatible implementations.
type UnimplementedQiggyBankServiceServer struct {
}

func (UnimplementedQiggyBankServiceServer) CreateQiggyBank(context.Context, *QiggyBank) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQiggyBank not implemented")
}
func (UnimplementedQiggyBankServiceServer) GetQiggyBank(context.Context, *wrapperspb.StringValue) (*QiggyBank, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQiggyBank not implemented")
}
func (UnimplementedQiggyBankServiceServer) UpdateQiggyBank(context.Context, *QiggyBank) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQiggyBank not implemented")
}
func (UnimplementedQiggyBankServiceServer) DeleteQiggyBank(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQiggyBank not implemented")
}
func (UnimplementedQiggyBankServiceServer) ListQiggyBanks(*emptypb.Empty, QiggyBankService_ListQiggyBanksServer) error {
	return status.Errorf(codes.Unimplemented, "method ListQiggyBanks not implemented")
}
func (UnimplementedQiggyBankServiceServer) mustEmbedUnimplementedQiggyBankServiceServer() {}

// UnsafeQiggyBankServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QiggyBankServiceServer will
// result in compilation errors.
type UnsafeQiggyBankServiceServer interface {
	mustEmbedUnimplementedQiggyBankServiceServer()
}

func RegisterQiggyBankServiceServer(s grpc.ServiceRegistrar, srv QiggyBankServiceServer) {
	s.RegisterService(&QiggyBankService_ServiceDesc, srv)
}

func _QiggyBankService_CreateQiggyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QiggyBank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QiggyBankServiceServer).CreateQiggyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bank.QiggyBankService/CreateQiggyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QiggyBankServiceServer).CreateQiggyBank(ctx, req.(*QiggyBank))
	}
	return interceptor(ctx, in, info, handler)
}

func _QiggyBankService_GetQiggyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QiggyBankServiceServer).GetQiggyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bank.QiggyBankService/GetQiggyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QiggyBankServiceServer).GetQiggyBank(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _QiggyBankService_UpdateQiggyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QiggyBank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QiggyBankServiceServer).UpdateQiggyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bank.QiggyBankService/UpdateQiggyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QiggyBankServiceServer).UpdateQiggyBank(ctx, req.(*QiggyBank))
	}
	return interceptor(ctx, in, info, handler)
}

func _QiggyBankService_DeleteQiggyBank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QiggyBankServiceServer).DeleteQiggyBank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bank.QiggyBankService/DeleteQiggyBank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QiggyBankServiceServer).DeleteQiggyBank(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _QiggyBankService_ListQiggyBanks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QiggyBankServiceServer).ListQiggyBanks(m, &qiggyBankServiceListQiggyBanksServer{stream})
}

type QiggyBankService_ListQiggyBanksServer interface {
	Send(*QiggyBankList) error
	grpc.ServerStream
}

type qiggyBankServiceListQiggyBanksServer struct {
	grpc.ServerStream
}

func (x *qiggyBankServiceListQiggyBanksServer) Send(m *QiggyBankList) error {
	return x.ServerStream.SendMsg(m)
}

// QiggyBankService_ServiceDesc is the grpc.ServiceDesc for QiggyBankService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QiggyBankService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bank.QiggyBankService",
	HandlerType: (*QiggyBankServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQiggyBank",
			Handler:    _QiggyBankService_CreateQiggyBank_Handler,
		},
		{
			MethodName: "GetQiggyBank",
			Handler:    _QiggyBankService_GetQiggyBank_Handler,
		},
		{
			MethodName: "UpdateQiggyBank",
			Handler:    _QiggyBankService_UpdateQiggyBank_Handler,
		},
		{
			MethodName: "DeleteQiggyBank",
			Handler:    _QiggyBankService_DeleteQiggyBank_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListQiggyBanks",
			Handler:       _QiggyBankService_ListQiggyBanks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bank.proto",
}
